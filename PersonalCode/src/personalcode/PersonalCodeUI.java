/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package personalcode;

import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.Objects;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author paul.maimik
 */
public class PersonalCodeUI extends javax.swing.JFrame {

    ImageIcon tick = new ImageIcon(getClass().getResource("/img/tick.png"));
    ImageIcon x = new ImageIcon(getClass().getResource("/img/x.png"));
    String gender;
    String genders;
    String date;
    Date Date = new Date();
    int year = Calendar.getInstance().get(Calendar.YEAR);
//    SimpleDateFormat fromatter = new SimpleDateFormat("dd.MM.yyyy");

    /**
     * Creates new form PersonalCodeUI
     */
    public PersonalCodeUI() {
        initComponents();
        getContentPane().setBackground(new Color(200, 200, 200));
        cmbVariables.setVisible(false);
        cmbVariables2.setVisible(false);
        jLabel2.setVisible(false);
        txtGeneratedPersonalCode.setVisible(false);
        chkFuture.setVisible(false);
        chkNormalAge.setVisible(false);
        ycBeginning.setYear(year - 50);
        ycEnd.setYear(year);

//  https://stackoverflow.com/questions/3953208/value-change-listener-to-jtextfield
        txtInsertPersonalCode.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                checkCode();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                checkCode();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                checkCode();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtInsertPersonalCode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaData = new javax.swing.JTextArea();
        lblCheckPersonalCodeImg = new javax.swing.JLabel();
        cmbVariables = new javax.swing.JComboBox<>();
        cmbVariables2 = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        cmbGender = new javax.swing.JComboBox<>();
        btnGeneratePersonalCode = new javax.swing.JButton();
        txtGeneratedPersonalCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        chkNormalAge = new javax.swing.JCheckBox();
        chkFuture = new javax.swing.JCheckBox();
        dcCalendar = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbGenders = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaData2 = new javax.swing.JTextArea();
        btnGeneratePersonalCodes = new javax.swing.JButton();
        btnClearPersonalCodes = new javax.swing.JButton();
        spnAmount = new javax.swing.JSpinner();
        ycBeginning = new com.toedter.calendar.JYearChooser();
        ycEnd = new com.toedter.calendar.JYearChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Isikukood");
        setBackground(new java.awt.Color(200, 200, 200));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(200, 200, 200));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Isikukoodi kontroll", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Sisesta isikukood:");

        txtaData.setEditable(false);
        txtaData.setColumns(20);
        txtaData.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        txtaData.setRows(5);
        jScrollPane1.setViewportView(txtaData);

        lblCheckPersonalCodeImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/x.png"))); // NOI18N

        cmbVariables.setBackground(new java.awt.Color(200, 200, 200));
        cmbVariables.setMaximumRowCount(5);
        cmbVariables.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vali", "Sugu", "Sünniaasta", "Sünnikuu", "Sünnipäev", "Täielik sünniaeg", "Haigla", "Kontrollkood", "Vanus" }));
        cmbVariables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVariablesActionPerformed(evt);
            }
        });

        cmbVariables2.setBackground(new java.awt.Color(200, 200, 200));
        cmbVariables2.setMaximumRowCount(5);
        cmbVariables2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVariables2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInsertPersonalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblCheckPersonalCodeImg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbVariables2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbVariables, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtInsertPersonalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblCheckPersonalCodeImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbVariables2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBackground(new java.awt.Color(200, 200, 200));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Isikukoodi genereerimine", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        cmbGender.setBackground(new java.awt.Color(200, 200, 200));
        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vali", "Mees", "Naine" }));
        cmbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGenderActionPerformed(evt);
            }
        });

        btnGeneratePersonalCode.setBackground(new java.awt.Color(200, 200, 200));
        btnGeneratePersonalCode.setText("Genereeri");
        btnGeneratePersonalCode.setEnabled(false);
        btnGeneratePersonalCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePersonalCodeActionPerformed(evt);
            }
        });

        txtGeneratedPersonalCode.setEditable(false);

        jLabel2.setText("Genereeritud kood:");

        chkNormalAge.setBackground(new java.awt.Color(200, 200, 200));
        chkNormalAge.setText("Normaalne vanus");

        chkFuture.setBackground(new java.awt.Color(200, 200, 200));
        chkFuture.setText("Tulevik");
        chkFuture.setEnabled(false);

        dcCalendar.setBackground(new java.awt.Color(200, 200, 200));
        dcCalendar.setDateFormatString("dd.MM.yyyy");
        dcCalendar.setEnabled(false);
        dcCalendar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcCalendarPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dcCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGeneratePersonalCode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkFuture))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGeneratedPersonalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chkNormalAge))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnGeneratePersonalCode)
                        .addComponent(chkFuture))
                    .addComponent(dcCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtGeneratedPersonalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkNormalAge))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(200, 200, 200));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mitme isikukoodi genereerimine", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel3.setText("Kogus:");

        jLabel4.setText("Algus:");

        jLabel5.setText("Lõpp:");

        jLabel6.setText("Sugu:");

        cmbGenders.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mõlemad", "Mees", "Naine" }));

        txtaData2.setEditable(false);
        txtaData2.setColumns(20);
        txtaData2.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        txtaData2.setRows(5);
        jScrollPane2.setViewportView(txtaData2);

        btnGeneratePersonalCodes.setBackground(new java.awt.Color(200, 200, 200));
        btnGeneratePersonalCodes.setText("Genereeri");
        btnGeneratePersonalCodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeneratePersonalCodesActionPerformed(evt);
            }
        });

        btnClearPersonalCodes.setBackground(new java.awt.Color(200, 200, 200));
        btnClearPersonalCodes.setText("Puhasta");
        btnClearPersonalCodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPersonalCodesActionPerformed(evt);
            }
        });

        spnAmount.setModel(new javax.swing.SpinnerNumberModel(5, 1, 100, 1));

        ycBeginning.setMaximum(2199);
        ycBeginning.setMinimum(1800);

        ycEnd.setMaximum(2199);
        ycEnd.setMinimum(1800);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbGenders, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spnAmount)
                            .addComponent(ycEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ycBeginning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnGeneratePersonalCodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClearPersonalCodes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ycBeginning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ycEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbGenders, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(btnClearPersonalCodes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGeneratePersonalCodes)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbVariablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVariablesActionPerformed
        String id = txtInsertPersonalCode.getText();
        ReadCode rc = new ReadCode(id);
        int option = cmbVariables.getSelectedIndex();
        if (option == 0) {
            txtaData.setText("");
            cmbVariables2.setVisible(false);
        } else if (option == 1) {
            cmbVariables2.setVisible(true);
            cmbVariables2.removeAllItems();
            cmbVariables2.addItem("Number");
            cmbVariables2.addItem("Täht");
            cmbVariables2.addItem("Sõna");
        } else if (option == 2) {
            cmbVariables2.setVisible(true);
            cmbVariables2.removeAllItems();
            cmbVariables2.addItem("Kahekohaline");
            cmbVariables2.addItem("Neljakohaline");
        } else if (option == 3) {
            cmbVariables2.setVisible(true);
            cmbVariables2.removeAllItems();
            cmbVariables2.addItem("Number");
            cmbVariables2.addItem("Tekst");
        } else if (option == 4) {
            cmbVariables2.setVisible(false);
            cmbVariables2.removeAllItems();
            txtaData.setText(Integer.toString(rc.getIntBirthDay()));
        } else if (option == 5) {
            cmbVariables2.setVisible(false);
            cmbVariables2.removeAllItems();
            txtaData.setText(rc.getFullBirthDate());
        } else if (option == 6) {
            cmbVariables2.setVisible(true);
            cmbVariables2.removeAllItems();
            cmbVariables2.addItem("Number");
            cmbVariables2.addItem("Tekst");
        } else if (option == 7) {
            cmbVariables2.setVisible(false);
            cmbVariables2.removeAllItems();
            txtaData.setText(Integer.toString(rc.getControlCode()));
        } else if (option == 8) {
            cmbVariables2.setVisible(false);
            cmbVariables2.removeAllItems();
            txtaData.setText(Objects.toString(rc.getAge()));
        }
    }//GEN-LAST:event_cmbVariablesActionPerformed

    private void cmbVariables2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVariables2ActionPerformed
        String id = txtInsertPersonalCode.getText();
        ReadCode rc = new ReadCode(id);
        int option = cmbVariables.getSelectedIndex();
        int option2 = cmbVariables2.getSelectedIndex();
        if (option == 1) {
            if (option2 == 0) {
                txtaData.setText(Integer.toString(rc.getIntGender()));
            } else if (option2 == 1) {
                txtaData.setText(rc.getStrGender(0));
            } else {
                txtaData.setText(rc.getStrGender(1));
            }
        } else if (option == 2) {
            if (option2 == 0) {
                txtaData.setText(Integer.toString(rc.getShortOrLongYear(0)));
            } else {
                txtaData.setText(Integer.toString(rc.getShortOrLongYear(1)));
            }
        } else if (option == 3) {
            if (option2 == 0) {
                txtaData.setText(Integer.toString(rc.getIntBirthMonth()));
            } else {
                txtaData.setText(rc.getStrBirthMonth());
            }
        } else if (option == 6) {
            if (option2 == 0) {
                txtaData.setText(Integer.toString(rc.getIntHospitalCode()));
            } else {
                txtaData.setText(rc.getStrHospitalCode());
            }
        }
    }//GEN-LAST:event_cmbVariables2ActionPerformed

    private void cmbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGenderActionPerformed
        int option = cmbGender.getSelectedIndex();
        if (option == 0) {
            gender = "";
            dcCalendar.setEnabled(false);
            btnGeneratePersonalCode.setEnabled(false);
            chkFuture.setVisible(false);
            chkNormalAge.setVisible(false);
            chkFuture.setSelected(false);
            chkNormalAge.setSelected(false);
            btnGeneratePersonalCode.setText("Genereeri");
        } else if (option == 1) {
            gender = "M";
            dcCalendar.setEnabled(true);
            btnGeneratePersonalCode.setEnabled(true);
        } else {
            gender = "N";
            dcCalendar.setEnabled(true);
            btnGeneratePersonalCode.setEnabled(true);
        }
    }//GEN-LAST:event_cmbGenderActionPerformed

    private void btnGeneratePersonalCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePersonalCodeActionPerformed
        date = ((JTextField) dcCalendar.getDateEditor().getUiComponent()).getText();
        GenerateCode gc = new GenerateCode(gender, date);
        if (gc.isValid()) {
            jLabel2.setVisible(true);
            txtGeneratedPersonalCode.setVisible(true);
            txtGeneratedPersonalCode.setText(gc.genPersonalCode());
            /* Ei tööta hetkel. on vaja klassi faili muuta.
            chkFuture.setVisible(true);
             */
            chkNormalAge.setVisible(true);
            btnGeneratePersonalCode.setText("Genereeri uuesti");
            if (chkNormalAge.isSelected()) {
                String id = txtGeneratedPersonalCode.getText();
                ReadCode rc = new ReadCode(id);
                if (!(rc.getAge() <= 123)) {
                    JOptionPane.showMessageDialog(this, new JLabel("Liiga vana", JLabel.CENTER), "Teade", JOptionPane.PLAIN_MESSAGE);
                }
//                if (calculateAge(formatter.parse(date), Today)) {
//                    
//                }
            }
//            if (chkFuture.isSelected()) {
//                try {
//                    if (Date.after(formatter.parse(today))) {
//                        JOptionPane.showMessageDialog(this, new JLabel("Isik on tulevikus", JLabel.CENTER), "Teade", JOptionPane.PLAIN_MESSAGE);
//                    } else {
//                        System.out.println("Isik teoorias ei tohiks olla tulevikus");
//                    }
//                } catch (ParseException ex) {
//                    Logger.getLogger(PersonalCodeUI.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
        } else {
            JOptionPane.showMessageDialog(this, "Genereerimisel tekkis viga!", "Viga", JOptionPane.ERROR_MESSAGE);
            chkFuture.setVisible(false);
            chkNormalAge.setVisible(false);
            btnGeneratePersonalCode.setText("Genereeri");
        }
    }//GEN-LAST:event_btnGeneratePersonalCodeActionPerformed

    private void dcCalendarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcCalendarPropertyChange
        date = ((JTextField) dcCalendar.getDateEditor().getUiComponent()).getText();
    }//GEN-LAST:event_dcCalendarPropertyChange

    private void btnGeneratePersonalCodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeneratePersonalCodesActionPerformed
        int option = cmbGenders.getSelectedIndex();
        int genderNr;
        int amount = (int) spnAmount.getValue();
        for (int i = 0; i < amount; i++) {
            if (option == 0) {
                genderNr = randInt(1, 2);
                if (genderNr == 1) {
                    genders = "M";
                } else {
                    genders = "N";
                }
            } else if (option == 1) {
                genders = "M";
            } else {
                genders = "N";
            }

            LocalDate startDate = LocalDate.of(ycBeginning.getValue(), 1, 1);
            long start = startDate.toEpochDay();
            LocalDate endDate = LocalDate.of(ycEnd.getValue(), 12, 31);
            long end = endDate.toEpochDay();
            long randomEpochDay = ThreadLocalRandom.current().longs(start, end).findAny().getAsLong();
            LocalDate ss = LocalDate.ofEpochDay(randomEpochDay);
            DateTimeFormatter formatted = DateTimeFormatter.ofPattern("dd.MM.yyyy");
//            System.out.println(ss + " - " + ss.format(formatted));
            GenerateCode gc = new GenerateCode(genders, ss.format(formatted));
            txtaData2.append(genders + " " + ss.format(formatted) + " " + gc.genPersonalCode() + "\n");
        }
    }//GEN-LAST:event_btnGeneratePersonalCodesActionPerformed

    private void btnClearPersonalCodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPersonalCodesActionPerformed
        txtaData2.setText("");
    }//GEN-LAST:event_btnClearPersonalCodesActionPerformed

    private void checkCode() {
        String id = txtInsertPersonalCode.getText();
        ReadCode rc = new ReadCode(id);
        if (rc.isValid()) {
            lblCheckPersonalCodeImg.setIcon(tick);
            txtaData.setText("");
            cmbVariables.setVisible(true);
        } else {
            lblCheckPersonalCodeImg.setIcon(x);
            txtaData.setText("");
            cmbVariables.setVisible(false);
            cmbVariables2.setVisible(false);
        }
    }

    private int randInt(int min, int max) {
        Random rand = new Random();
        int randomNum = rand.nextInt((max - min) + 1) + min;
        return randomNum;
    }

    public static int randBetween(int start, int end) {
        return start + (int) Math.round(Math.random() * (end - start));
    }

//    public static int calculateAge(LocalDate birthDate, LocalDate currentDate) {
//        if ((birthDate != null) && (currentDate != null)) {
//            return Period.between(birthDate, currentDate).getYears();
//        } else {
//            return 0;
//        }
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonalCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonalCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonalCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonalCodeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonalCodeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearPersonalCodes;
    private javax.swing.JButton btnGeneratePersonalCode;
    private javax.swing.JButton btnGeneratePersonalCodes;
    private javax.swing.JCheckBox chkFuture;
    private javax.swing.JCheckBox chkNormalAge;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbGenders;
    private javax.swing.JComboBox<String> cmbVariables;
    private javax.swing.JComboBox<String> cmbVariables2;
    private com.toedter.calendar.JDateChooser dcCalendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCheckPersonalCodeImg;
    private javax.swing.JSpinner spnAmount;
    private javax.swing.JTextField txtGeneratedPersonalCode;
    private javax.swing.JTextField txtInsertPersonalCode;
    private javax.swing.JTextArea txtaData;
    private javax.swing.JTextArea txtaData2;
    private com.toedter.calendar.JYearChooser ycBeginning;
    private com.toedter.calendar.JYearChooser ycEnd;
    // End of variables declaration//GEN-END:variables
}
